---

- name: Bootstrap personal Linux PC
  hosts: localhost
  connection: local
  gather_facts: true

  vars_files:
    - "vars_{{ ansible_os_family | lower }}.yml"
  vars:
    github_packages:
      - { name: "tmux-plugins/tpm", dest: "~/.tmux/plugins/tpm" }

  tasks:
    - name: Prepare | Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_user_id }}"

    - name: Install (system-wide) | Distribution integrated packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      become: true
      loop: "{{ distrib_packages }}"
      register: pkg_state

    - name: Install (personal) | Github provided packages
      ansible.builtin.git:
        repo: "https://github.com/{{ item.name }}"
        dest: "{{ item.dest }}"
      loop: "{{ github_packages }}"

    # - name: Install (personal) | Fish tide plugin
    #   ansible.builtin.command: fish -c "fisher install ilancosman/tide@v5"

    - name: Config (personal) | Change shell to fish
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/fish
      become: true

    - name: Install (system-wide) | Download and extract neovim binary and install
      ansible.builtin.unarchive:
        src: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
        dest: /tmp
        remote_src: true
      register: dirs

    - name: Install (system-wide) | Install neovim files into Linux system directories
      ansible.builtin.copy:
        src: "/tmp/nvim-linux64/{{ item }}/"
        dest: "/usr/local/"
        remote_src: true
        owner: root
        group: root
      with_items:
        - bin
        - lib
        - share
      become: true

    - name: Install (system-wide) | Cleanup neovim archive
      ansible.builtin.file:
        path: /tmp/nvim-linux64
        state: absent

    - name: Execute | OS specific tasks
      ansible.builtin.include_tasks: "tasks_{{ ansible_os_family | lower }}.yml"
